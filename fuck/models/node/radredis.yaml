############################
# RADREDIS SCHEMA for NODE #
############################

name: Node

description: >
  Node is an arbitrary packet of data

# Path to corresponding service

service: models/node/service

# Properties are used to determine the underlying redis implementation

properties:

  - name: Value
    type: String!

  - name: Foo
    type: Integer
    default: 4
    description: >
      Foo is a placeholder field which defaults to 4

  - name: Bar
    type: [ Integer ]
    default: [ 1, 2, 3, 4 ]
    description: >
      Bar is an arbitrary array of integers, because why not

  # omitted fields are not handled automatically
  #   however, the Radredis Type Builder will offer hooks to
  #   implement these for convenience
  - name: Baz
    type: [ Edge ]
    omit: true
    description: >
      Baz is not to be implemented by radredis, and is placed
      here for reference in the computed fields

# Computed properties use a simple DSL to implement common operations

computed:

  - name: HasBaz
    type: Boolean
    value: not empty Baz
    description:
      Describes whether or not a Node has any edges in Baz

edges:

  - name: Edge
    from: Node
    to:   Node
    properties:
      - name: Foo
        type: Integer
      - name: Bar
        type: String
    description: >
      Edge is an arbitrary directed edge connecting a Node to another Node

  - name: Owns
    from: Node
    to:   Node
    inverse: OwnedBy
    description: >
      Owns is an directed edge with no properties,
      but contains an inverse edge called OwnedBy
